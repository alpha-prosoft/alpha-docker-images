ARG DOCKER_URL
ARG DOCKER_ORG

FROM library/amazonlinux:2

WORKDIR /root
ENV DEBIAN_FRONTEND noninteractive

SHELL ["/bin/bash", "-c"]

ENV PATH $PATH:/usr/sbin

COPY cert cert
RUN update-ca-trust force-enable &&\
    cp cert/* /etc/pki/ca-trust/source/anchors/ &&\
    update-ca-trust extract 
   
RUN export REQUESTS_CA_BUNDLE=/etc/pki/tls/certs/ca-bundle.crt
    
ENV NO_PROXY="*.amazonlinux.com"
RUN yum update -y --disableplugin=subscription-manager && \
    yum clean all && \
    rm -rf /var/cache/yum/ /var/tmp/* /tmp/* /var/tmp/.???* /tmp/.???*


RUN export REQUESTS_CA_BUNDLE=/usr/local/share/ca-certificates/RTrustRootCA01.crt

ENV YUM_OPTS "--setopt=skip_missing_names_on_install=False"

RUN set -e &&\
    yum ${YUM_OPTS} install -y yum-utils \
                       amazon-linux-extras \
                       shadow-utils \
                       unzip \
                       jq \
                       openssh-clients \
                       zip \
                       git \
                       tree \
                       vim \
                       uuid \
		       gettext \
                       curl \
                       ca-certificates \
                       tzdata \
                       tar \
                       xz \
                       openssl11 \
                       openssl11-devel \
                       libffi-devel \
                       gcc bzip2-devel libffi-devel gzip make


RUN set -e &&\
    amazon-linux-extras install python3.8

RUN ln -s /usr/bin/openssl11 /usr/bin/openssl

RUN groupadd --gid 1033 build &&\
    adduser --gid 1033 --uid 1034 build &&\
    adduser --gid 1033 --uid 1035 jenkins
 
USER build
RUN id 
USER root

RUN mkdir -p /home/jenkins
RUN mkdir -p /dist

RUN chown build:build /home/build -R &&\
    chown build:build /home/jenkins -R &&\
    chown build:build /dist -R 



RUN date

ENV TZ "Europe/Vienna"
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN date 

ENV PYTHON_VERSION 3.10.3
RUN set -e &&\
    curl https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz  -o  python-$PYTHON_VERSION.tgz &&\
    tar xzf python-$PYTHON_VERSION.tgz &&\
    rm -rf python-$PYTHON_VERSION.tgz &&\
    cd Python-$PYTHON_VERSION &&\
    ./configure --enable-optimizations &&\
    make altinstall &&\
    ln -s /usr/local/bin/python3.10 /usr/local/bin/python3 &&\
    ln -s /usr/local/bin/python3.10 /usr/bin/python3 &&\
    ln -s /usr/local/bin/pip3.10 /usr/local/bin/pip3 &&\
    cd .. &&\
    rm -rf Python-$PYTHON_VERSION &&\
    echo "### Checking versions" &&\
    python3 --version &&\
    pip3 --version
 
USER build
RUN pip3 install --upgrade \
          ansible \
          jinja2 \
          boto \
          boto3 \
          pyyaml \
          docker-py \
          botocore \
          elasticsearch \
          aws-requests-auth \
          psycopg2-binary \
          yq \
          pyyaml \
          psycopg2-binary

ENV PATH $PATH:/home/build/.local/bin

RUN set -e && \
    ansible --version

# Update all ansible collections
#ENV ANSIBLE_COLLECTIONS_PATH /home/build/.local/lib/python3.8/site-packages/ansible_collections

#RUN set -e && \
#    ansible-galaxy collection list \
#        | grep -Ev "^$"  \
#        | grep -v 'Collection' \
#        | grep -Ev '^#.*$' \
#        | grep -vE '^[- ]+$' \
#        | awk '{print $1}' \
#        | xargs -I {} ansible-galaxy collection install -U {}

USER root 



RUN set -e &&\
    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" &&\
    unzip -qq awscliv2.zip &&\
    ./aws/install

RUN set -e &&\
    aws --version

RUN set -e &&\
    curl -L -o /usr/bin/yq https://github.com/mikefarah/yq/releases/download/v4.13.5/yq_linux_amd64 &&\
    chmod +x /usr/bin/yq &&\
    yq --version

RUN set -e &&\
    curl -sLO https://raw.githubusercontent.com/babashka/babashka/master/install &&\
    chmod +x install &&\
    ./install

COPY ext/ansible.cfg /etc/ansible/ansible.cfg
COPY ext/ansible.cfg /dist/ansible.cfg
COPY ext/gitconfig /home/build/.gitconfig

RUN set -e &&\
    mkdir -p /home/build/.ssh &&\
    chown build:build -R /home/build/.ssh &&\
    chmod -R 700 /home/build/.ssh

RUN set -e &&\
    curl -sLO https://raw.githubusercontent.com/babashka/babashka/master/install &&\
    chmod +x install &&\
    ./install

COPY --chown=build:build ext/ssh-config  /home/build/.ssh/config

RUN chmod 700 /home/build/.ssh/config

ENTRYPOINT []

RUN chown build:build /home/build -R
WORKDIR /home/build
USER build
