ARG DOCKER_URL
ARG DOCKER_ORG

FROM ${DOCKER_URL}/${DOCKER_ORG}/web-img:local-build

# Onbuild part
ONBUILD ARG PROJECT_NAME
ONBUILD ENV PROJECT_NAME ${PROJECT_NAME}
ONBUILD ARG DEPLOY_TARGET
ONBUILD ENV DEPLOY_TARGET ${DEPLOY_TARGET}

COPY --chown=build:build ext/deps.edn /home/build/.clojure/deps.edn
COPY --chown=build:build ext/DEV.edn /home/build/.clojure/DEV.edn
COPY --chown=build:build ext/PROD.edn /home/build/.clojure/PROD.edn

COPY --chown=build:build ext/merge.clj merge.clj


ONBUILD COPY --chown=build:build shadow-cljs.edn shadow-cljs.edn

ONBUILD COPY --chown=build:build deps.edn deps-temp.edn

ONBUILD RUN clj -Sdeps '{}' merge.clj
ONBUILD RUN cat deps.edn 


ONBUILD RUN mkdir -p /dist/s3

ONBUILD RUN --mount=type=secret,id=settings.xml,mode=600,uid=1034,gid=1033,dst=/home/build/.m2/settings.xml set -e &&\
             shadow-cljs classpath

ONBUILD COPY --chown=build:build resources resources
ONBUILD COPY --chown=build:build src src
ONBUILD COPY --chown=build:build lib lib
ONBUILD COPY --chown=build:build api api

ONBUILD RUN --mount=type=secret,id=settings.xml,mode=600,uid=1034,gid=1033,dst=/home/build/.m2/settings.xml set -e &&\
              clojure -M:test:runner &&\
              shadow-cljs -A:dev release devcards &&\
              cp -r resources/public/* /dist/s3/ &&\
              mkdir -p resources/dev/template/ &&\
              mkdir -p /dist/template &&\
              cp resources/dev/template/* /dist/template/ &&\
              rm -rf node_modules
                

ONBUILD ARG BUILD_ID
ONBUILD ENV BUILD_ID ${BUILD_ID}

ONBUILD RUN ls -la /dist

